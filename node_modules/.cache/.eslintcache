[{"C:\\Distributed_Nodeworks\\src\\index.js":"1","C:\\Distributed_Nodeworks\\src\\App.js":"2","C:\\Distributed_Nodeworks\\src\\reportWebVitals.js":"3","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\index.js":"4","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\App.js":"5","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\reportWebVitals.js":"6","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\Login.js":"7","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\Signup.js":"8","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\workflow.js":"9","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\home.js":"10","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Component\\Nav.js":"11","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\Sidebar.js":"12","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\InputNode.js":"13","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\OutputNode.js":"14","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\main.js":"15"},{"size":517,"mtime":1628708657378,"results":"16","hashOfConfig":"17"},{"size":1511,"mtime":1628708854344,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1628708657378,"results":"19","hashOfConfig":"17"},{"size":517,"mtime":1628740203892,"results":"20","hashOfConfig":"21"},{"size":1593,"mtime":1629692915161,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1628740203894,"results":"23","hashOfConfig":"21"},{"size":2672,"mtime":1629692915163,"results":"24","hashOfConfig":"21"},{"size":2480,"mtime":1629692915164,"results":"25","hashOfConfig":"21"},{"size":4300,"mtime":1629692915169,"results":"26","hashOfConfig":"21"},{"size":6664,"mtime":1629784966622,"results":"27","hashOfConfig":"21"},{"size":2026,"mtime":1629784966619,"results":"28","hashOfConfig":"21"},{"size":1097,"mtime":1629084138868,"results":"29","hashOfConfig":"21"},{"size":1162,"mtime":1629176553082,"results":"30","hashOfConfig":"21"},{"size":1061,"mtime":1629176553083,"results":"31","hashOfConfig":"21"},{"size":3810,"mtime":1630124253347,"results":"32","hashOfConfig":"21"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9uxbag",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"8g015g",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Distributed_Nodeworks\\src\\index.js",[],"C:\\Distributed_Nodeworks\\src\\App.js",["72","73"],"C:\\Distributed_Nodeworks\\src\\reportWebVitals.js",[],"C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\index.js",[],["74","75"],"C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\App.js",["76","77","78"],"import React, { useState, useEffect, Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Login from './Pages/Login'\r\nimport Nav from './Component/Nav';\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport signup from './Pages/Signup';\r\nimport Home from './Pages/home';\r\nimport Workflow from './Pages/workflow'\r\nimport axios from 'axios';\r\nimport main from './Pages/main'\r\nimport ReactFlow from 'react-flow-renderer';\r\nexport default class App extends Component{\r\n  state ={}\r\n  componentDidMount= ()=>{\r\n    const config = {\r\n      headers:{\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')\r\n      }\r\n    }\r\n    axios.get('http://localhost:5000/api/v1/getuser/'+sessionStorage.getItem('token'),config).then(\r\n      res=>{\r\n        console.log(res['data']['username'])\r\n        this.setState({user:res['data']['username'],\r\n                      key: res['data']['user_key']})\r\n      },\r\n      err=>{\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav user={this.state.user } key = {this.state.key}/>\r\n        <BrowserRouter>\r\n          <Route path=\"/\" exact component={main}/>\r\n          <main className=\"form-signin\">\r\n            <Route path =\"/signup/\" exact component={signup}/>\r\n            <Route path =\"/login/\" exact component={Login}/>\r\n          </main>\r\n          <Route path =\"/workflow/\" exact component={Workflow}/>\r\n          <Route path=\"/Home/\" exact component={Home}/>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\reportWebVitals.js",[],"C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\Login.js",["79"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from \"react-router-dom\";\r\n// import curry from \"./img/\"\r\nclass Login extends Component{\r\n    state = {}\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log('works!')\r\n        const data = {\r\n            username: this.username,\r\n            password: this.password,\r\n            emailAddress: this.email\r\n        }\r\n        axios.post('http://localhost:5000/api/v1/login',data).then(\r\n            res=>{\r\n                sessionStorage.setItem('token',res['data']['user_key']);\r\n                sessionStorage.setItem('username',res['data']['username'])\r\n                // if(res['status'] == 200){\r\n                //     this.setState({ redirect: \"/home\" });\r\n                // }\r\n                this.setState({\r\n                    loggedIn: true\r\n                });\r\n                window.location.reload()\r\n                console.log(res['data']['user_key'])\r\n            }\r\n        ).catch(\r\n            err =>{\r\n                console.log(err);\r\n            }\r\n        )\r\n        // console.log(data)\r\n    }\r\n    render() {\r\n        if(this.state.loggedIn){\r\n            return <Redirect to={'/workflow'} />\r\n        }\r\n        return(\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    {/* <!-- Tabs Titles -->\r\n\r\n                    <!-- Icon --> */}\r\n                    <div className=\"fadeIn first\">\r\n                        <img src='./img/bunny.png' id=\"icon\" alt=\"User Icon\" height = \"200px\" width = \"200px\"/>\r\n                    </div>\r\n                    {/* <!-- Login Form --> */}\r\n                    <form onSubmit={this.handleSubmit} method=\"POST\">\r\n                    <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"email\" placeholder=\"Email\" onChange= {e=> this.email = e.target.value}/>\r\n                        <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"username\" placeholder=\"username\" onChange= {e=> this.username = e.target.value}/>\r\n                        <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"password\" onChange= {e=> this.password = e.target.value}/>\r\n                        <input  type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\"/>\r\n                    </form>\r\n\r\n                    {/* <!-- Remind Passowrd --> */}\r\n                    <div id=\"formFooter\">\r\n                        <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\Signup.js",["80","81"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nclass signup extends Component{\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log('works!')\r\n        const data = {\r\n            username: this.username,\r\n            password: this.password,\r\n            password2: this.password2,\r\n            emailAddress: this.email\r\n        }\r\n        if (this.password!= this.password2){\r\n            window.alert(\"Passwords do not match\")\r\n        }\r\n        else{\r\n            axios.post('http://localhost:5000/api/v1/register',data).then(\r\n                res=>{\r\n                    window.location = \"/workflow\";\r\n                }\r\n            ).catch(\r\n                err =>{\r\n                    console.log(err);\r\n                }\r\n            )\r\n        }\r\n        // console.log(data)\r\n    }\r\n    render () {\r\n        return(\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    {/* <!-- Tabs Titles -->\r\n    \r\n                    <!-- Icon --> */}\r\n                    <div className=\"fadeIn first\">\r\n                        <img src='./img/bunny.png' id=\"icon\" alt=\"User Icon\" height = \"200px\" width = \"200px\"/>\r\n                    </div>\r\n                    {/* <!-- Login Form --> */}\r\n                    <form onSubmit={this.handleSubmit}  method=\"POST\">\r\n                        <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"email\" placeholder=\"Email\" onChange= {e=> this.email = e.target.value}/>\r\n                        <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"username\" placeholder=\"username\" onChange= {e=> this.username = e.target.value}/>\r\n                        <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"password\" onChange= {e=> this.password = e.target.value}/>\r\n                        <input type=\"text\" id=\"password2\" className=\"fadeIn third\" name=\"password2\" placeholder=\"retype password\" onChange= {e=> this.password2 = e.target.value}/>\r\n                        <input type=\"submit\" className=\"fadeIn fourth\" value=\"Register\"/>\r\n                    </form>\r\n    \r\n                    {/* <!-- Remind Passowrd --> */}\r\n                    <div id=\"formFooter\">\r\n                        <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\r\n                    </div>\r\n    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default signup;","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\workflow.js",["82","83","84","85","86","87","88","89","90","91"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { render } from '@testing-library/react';\r\nimport './workflow.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport mount from './home'\r\nimport DnDFlow from './home';\r\nclass workflow extends Component{\r\n    state = {}\r\n    createWork(){\r\n        sessionStorage.setItem(\"content\",null);\r\n        sessionStorage.setItem(\"contentName\",null);\r\n        sessionStorage.setItem(\"content-length\",null)\r\n        window.location = \"/Home/\";\r\n    }\r\n    workflowFiles(content, name, fileID, owner,data){\r\n        // console.log(data);\r\n        const displayID = (content,name)=>{\r\n            // console.log(\"CONTENT \" +content);\r\n            let nodes = JSON.stringify(eval('('+content+')'));\r\n            let newname = name;\r\n            const numOfNodes=JSON.parse(nodes)\r\n            sessionStorage.setItem(\"content\",nodes);\r\n            sessionStorage.setItem(\"contentName\",newname);\r\n            sessionStorage.setItem(\"content-length\",Object.keys(numOfNodes).length)\r\n            window.location = \"/Home/\";\r\n        }\r\n        const deleteWorkFlow=(file_id)=>{\r\n            axios.get('http://localhost:5000/api/v1/workflow/delete/'+file_id).then(\r\n            res=>{\r\n                console.log(res)\r\n            }\r\n            ).catch(\r\n            err =>{\r\n                console.log(err);\r\n            }\r\n            )\r\n            window.location.reload();\r\n        }\r\n        return <div class = \"LIST\">\r\n            <ul class = \"workflowUnorderList\">\r\n                {data.map((item)=>\r\n                <li class = \"workflowList\" id = {item.file_id}>\r\n                    <div class = \"workflowName\" onClick={() => displayID(item.content,item.name)}>\r\n                        <h5 class = \"Name\" id = {item.file_id} >{item.name} </h5>\r\n                    </div>\r\n                    <button class=\"delete\" onClick={() => deleteWorkFlow(item.file_id)}><span class='text'>Delete</span><span class=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg></span></button>\r\n                </li>)}\r\n            </ul>\r\n        </div>\r\n    }\r\n    getWorkflow = () => {\r\n        axios.get('http://localhost:5000/api/v1/workflow/getOwner/'+sessionStorage.getItem('username')).then(\r\n            res=>{\r\n                const data = res['data']\r\n                // console.log(res['data'])\r\n                const content = res['data'][0]['content'];\r\n                const name = res['data'][0]['name']\r\n                const fileID = res['data'][0]['id']\r\n                const owner = res['data'][0]['owner']\r\n                const json = JSON.parse(JSON.stringify(content))\r\n                this.setState({\r\n                    workflow: this.workflowFiles(1,name,1,1,data)\r\n                })\r\n                // const test = JSON.parse(JSON.stringify(eval('('+content+')')))\r\n                // console.log(test)\r\n            \r\n            }\r\n            ).catch(\r\n            err =>{\r\n                console.log(err);\r\n            }\r\n            )\r\n    }\r\n    componentDidMount= () =>{\r\n        this.getWorkflow()\r\n    }\r\n    render(){\r\n        if(sessionStorage.getItem('username')==null){\r\n            window.location = \"/login\";\r\n        }\r\n        return (\r\n            <div class=\"area\">\r\n                <h4 class=\"Title\">WORKFLOWS</h4>\r\n                <div class=\"workflow\">\r\n                    \r\n\r\n                    <a class=\"create\" href=\"javascript:void(0);\" onClick ={() => this.createWork()}>Create Workflow</a>\r\n\r\n                    <div>\r\n                        {this.state.workflow}\r\n                    </div>\r\n                </div>\r\n                <ul class=\"circles\">\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            \r\n            \r\n        );\r\n    }\r\n};\r\nexport default workflow;","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\home.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls,\r\n  MiniMap,\r\n} from 'react-flow-renderer';\r\n\r\nimport Sidebar from './Sidebar.js';\r\nimport axios from 'axios';\r\nimport './dnd.css';\r\nimport localforage from 'localforage';\r\nimport ColorSelectorNode from './InputNode';\r\nimport outputNode from './OutputNode'\r\n\r\n\r\nlocalforage.config({\r\n  name: 'react-flow-docs',\r\n  storeName: 'flows',\r\n});\r\n\r\nconst initBgColor = '#1A192B';\r\n\r\nconst flowKey = 'example-flow';\r\nconst nodes = JSON.parse(sessionStorage.getItem('content'));\r\nconst name = sessionStorage.getItem('contentName');\r\n// console.log(\"TEST\"+name);\r\nlet initialElements = [];\r\nlet id = 0;\r\nlet Save = false\r\nif(nodes!= null){\r\n  initialElements = nodes;\r\n  id = sessionStorage.getItem('content-length');\r\n  Save = true\r\n}\r\n\r\n\r\n\r\nconst getId = () => `dndnode_${id++}`;\r\nconst nodeTypes = {\r\n  selectorNode: ColorSelectorNode,\r\n  outputNum: outputNode\r\n};\r\nconst DnDFlow = () => {\r\n  let fileID = React.createRef()\r\n  // if(name!=null){\r\n  //   fileID.current.value = name\r\n  // }\r\n  const [bgColor, setBgColor] = useState(initBgColor);\r\n\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  };\r\n\r\n  const onDrop = useCallback((event) => {\r\n    // event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n    // if(type == 'selectorNode'){\r\n    //   const connectId = ''\r\n    // }\r\n    console.log(type)\r\n    var position = null;\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position: {\r\n        x: event.clientX,\r\n        y: event.clientY-reactFlowBounds.top\r\n      },\r\n      data: { label: `${type} node` },\r\n    };\r\n    console.log(newNode)\r\n    setElements((es) => es.concat(newNode));\r\n    console.log(newNode.id);\r\n  },[setElements]);\r\n  \r\n  const onSave = useCallback(() => {\r\n    \r\n    if (reactFlowInstance) {\r\n      const flow = reactFlowInstance.toObject();\r\n      localforage.setItem(flowKey, flow);\r\n    }\r\n  }, [reactFlowInstance]);\r\n  const sendWorkflow = () =>{\r\n    // console.log(elements)\r\n    let ele = JSON.stringify(elements)\r\n    console.log(ele)\r\n    try{\r\n      fileID = fileID.current.value\r\n    }\r\n    catch{\r\n      window.alert(\"ERROR\",fileID)\r\n      return\r\n    }\r\n    const data={\r\n      user: sessionStorage.getItem('username'),\r\n      node: elements,\r\n      fileId: fileID\r\n    }\r\n    if(data.fileId == \"\"){\r\n      console.log(\"EMPTY\")\r\n      window.alert(\"Cannot have empty file name\")\r\n      return\r\n    }\r\n    console.log(data)\r\n    // HOW TO SAVE\r\n    if(Save == true){\r\n      axios.post('http://localhost:5000/api/v1/workflow/publish/'+sessionStorage.getItem('token'),data).then(\r\n        res=>{\r\n          console.log(\"HELLO posted\" + res)\r\n      }\r\n      ).catch(\r\n        err =>{\r\n            window.alert(\"ERROR IN SAVED FILE\")\r\n            console.log(\"ERROR IN SAVED FILE\");\r\n        }\r\n      )\r\n    }\r\n    else{\r\n      axios.put('http://localhost:5000/api/v1/workflow/publish/'+sessionStorage.getItem('token'),data).then(\r\n        res=>{\r\n          console.log(\"HELLO\" + res)\r\n      }\r\n      ).catch(\r\n        err =>{\r\n            window.alert(\"ERROR In FILE\")\r\n            console.log(\"ERROR IN FILE\");\r\n        }\r\n      ) \r\n    }\r\n    //HOW TO SAVE END\r\n    // axios.get('http://localhost:5000/api/v1/workflow/getOwner/'+localStorage.getItem('username')).then(\r\n    //   res=>{\r\n    //     console.log(res['data'].length)\r\n    // }\r\n    // ).catch(\r\n    //   err =>{\r\n    //       console.log(err);\r\n    //   }\r\n    // )\r\n  }\r\n  const onRestore = useCallback(() => {\r\n    const restoreFlow = async () => {\r\n      const flow = await localforage.getItem(flowKey);\r\n\r\n      if (flow) {\r\n        const [x = 0, y = 0] = flow.position;\r\n        setElements(flow.elements || []);\r\n      }\r\n    };\r\n\r\n    restoreFlow();\r\n  }, [setElements]);\r\n  if(sessionStorage.getItem('username')==null){\r\n    window.location = \"/login\";\r\n  }\r\n  const loggedIn = () =>{\r\n    if(nodes!= null){\r\n      return <div class = \"navBar\">\r\n      <input class=\"fileName\" ref = {fileID} placeholder=\"Type Filename\" value = {name}></input>\r\n      <div class = \"navObjects\">\r\n        <img src = \"/./img/save.svg\" class= \"navBtn\" onClick={onSave}></img>\r\n        <img src = \"/./img/undo-alt.svg\" class= \"navBtn\" onClick={onRestore}></img>\r\n        <img src = \"/./img/cloud-upload-alt.svg\" class= \"navBtn\" onClick={sendWorkflow}></img>\r\n      </div>\r\n    </div>\r\n    }\r\n    return <div class = \"navBar\">\r\n      <input ref = {fileID} class=\"fileName\" placeholder=\"Type Filename\"></input>\r\n      <div class = \"navObjects\">\r\n        <img src = \"/./img/play-circle.svg\" class= \"navBtn\"></img>\r\n        <img src = \"/./img/save.svg\" class= \"navBtn\" onClick={onSave}></img>\r\n        <img src = \"/./img/undo-alt.svg\" class= \"navBtn\" onClick={onRestore}></img>\r\n        <img src = \"/./img/cloud-upload-alt.svg\" class= \"navBtn\" onClick={sendWorkflow}></img>\r\n      </div>\r\n    </div>\r\n  };\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          \r\n          {loggedIn()}\r\n          <ReactFlow\r\n          \r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            nodeTypes={nodeTypes}\r\n          >\r\n            <MiniMap\r\n              nodeStrokeColor={(n) => {\r\n                if (n.type === 'input') return '#0041d0';\r\n                if (n.type === 'output') return '#ff0072';\r\n                if (n.type === 'default') return '#1a192b';\r\n                if(n.type === 'outputNum') return '#ff00aa';  \r\n                if(n.type === 'selectorNode') return '#00ffc8';              \r\n              }}\r\n              \r\n            />\r\n\r\n            <Controls />\r\n          </ReactFlow>\r\n\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Component\\Nav.js",[],"C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\Sidebar.js",["106"],"import React from 'react';\r\n\r\nexport default () => {\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData('application/reactflow', nodeType);\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n      <div className=\"dndnode input\" onDragStart={(event) => onDragStart(event, 'input')} draggable>\r\n        Input Node\r\n      </div>\r\n      <div className=\"dndnode\" onDragStart={(event) => onDragStart(event, 'default')} draggable>\r\n        Default Node\r\n      </div>\r\n      <div className=\"dndnode output\" onDragStart={(event) => onDragStart(event, 'output')} draggable>\r\n        Output Node\r\n      </div>\r\n      <div className=\"dndnode inputNum\" onDragStart={(event) => onDragStart(event, 'selectorNode')} draggable>\r\n        Number\r\n      </div>\r\n      <div className=\"dndnode outputNode\" onDragStart={(event) => onDragStart(event, 'outputNum')} draggable>\r\n        output Num\r\n      </div>\r\n      {/* <button>Save</button> */}\r\n    </aside>\r\n  );\r\n};","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\InputNode.js",["107","108"],"import React, { createRef, memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\nimport './dnd.css';\r\nlet letId = React.createRef()\r\nexport default memo(({ data, isConnectable }) => {\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n        style={{ background: '#555' }}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n        isConnectable={isConnectable}\r\n      />\r\n      {/* <div className = \"selector\">\r\n        Custom Color Picker Node: <strong>{data.color}</strong>\r\n      </div> */}\r\n      <div className = \"selector\">\r\n        <input class = \"selectorInput\" placeholder = \"Enter a number\"></input>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"a\"\r\n        style={{ top: 10, background: 'red' }}\r\n        isConnectable={isConnectable}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"b\"\r\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </>\r\n  );\r\n});","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\OutputNode.js",["109","110","111","112","113","114","115","116","117","118","119"],"import React, { memo } from 'react';\r\n\r\nimport {  \r\n  addEdge,\r\n  Handle,\r\n  OnLoadParams,\r\n  Connection,\r\n  Position,\r\n  Elements,\r\n  Edge,\r\n  OnConnectStartParams,\r\n  NodeProps,\r\n  NodeTypesType} from 'react-flow-renderer';\r\nimport './dnd.css';\r\n\r\n// const onConnect = () =>{\r\n//   console.log(\"connected\")\r\n// }\r\nconst isValid = (connection) =>{\r\n  console.log(\"CONNECt\")\r\n  \r\n}\r\nconst isValidConnection = (connection) => connection.target === 'selector';\r\nconst onConnect = (source,target)=>{\r\n  console.log(target)\r\n}\r\nexport default memo(({ data, isConnectable }) => {\r\n  console.log(\"hdlfksdjf\",data)\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"top\"\r\n        style={{ background: '#555' }}\r\n        // isConnectable = {isConnectable}\r\n        // isValidConnection={isValidConnection}\r\n        onConnect={onConnect()}\r\n        onConnectStart = {() => console.log('on connect start')}\r\n      />\r\n      <div className = \"selector selector-Output\">\r\n        <p id = \"output\">{data.label}</p>\r\n      </div>\r\n    </>\r\n  );\r\n});","C:\\CodeDays\\CodeDayProject\\Distributed_Nodeworks\\src\\Pages\\main.js",["120","121","122"],{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"127","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"127","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"132","line":12,"column":8,"nodeType":"125","messageId":"126","endLine":12,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":58,"column":25,"nodeType":"135","endLine":58,"endColumn":64},{"ruleId":"136","severity":1,"message":"137","line":13,"column":26,"nodeType":"138","messageId":"139","endLine":13,"endColumn":28},{"ruleId":"133","severity":1,"message":"134","line":50,"column":25,"nodeType":"135","endLine":50,"endColumn":64},{"ruleId":"123","severity":1,"message":"140","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"141","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":18},{"ruleId":"123","severity":1,"message":"142","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":13},{"ruleId":"123","severity":1,"message":"143","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":15},{"ruleId":"144","severity":1,"message":"145","line":20,"column":40,"nodeType":"146","messageId":"139","endLine":20,"endColumn":44},{"ruleId":"123","severity":1,"message":"147","line":59,"column":23,"nodeType":"125","messageId":"126","endLine":59,"endColumn":29},{"ruleId":"123","severity":1,"message":"148","line":60,"column":23,"nodeType":"125","messageId":"126","endLine":60,"endColumn":28},{"ruleId":"123","severity":1,"message":"149","line":61,"column":23,"nodeType":"125","messageId":"126","endLine":61,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":88,"column":21,"nodeType":"135","endLine":88,"endColumn":101},{"ruleId":"150","severity":1,"message":"151","line":88,"column":44,"nodeType":"152","messageId":"153","endLine":88,"endColumn":65},{"ruleId":"123","severity":1,"message":"154","line":50,"column":10,"nodeType":"125","messageId":"126","endLine":50,"endColumn":17},{"ruleId":"123","severity":1,"message":"155","line":50,"column":19,"nodeType":"125","messageId":"126","endLine":50,"endColumn":29},{"ruleId":"123","severity":1,"message":"156","line":75,"column":9,"nodeType":"125","messageId":"126","endLine":75,"endColumn":17},{"ruleId":"136","severity":1,"message":"157","line":113,"column":20,"nodeType":"138","messageId":"139","endLine":113,"endColumn":22},{"ruleId":"136","severity":1,"message":"157","line":120,"column":13,"nodeType":"138","messageId":"139","endLine":120,"endColumn":15},{"ruleId":"123","severity":1,"message":"158","line":160,"column":16,"nodeType":"125","messageId":"126","endLine":160,"endColumn":17},{"ruleId":"123","severity":1,"message":"159","line":160,"column":23,"nodeType":"125","messageId":"126","endLine":160,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":175,"column":9,"nodeType":"135","endLine":175,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":176,"column":9,"nodeType":"135","endLine":176,"endColumn":78},{"ruleId":"160","severity":1,"message":"161","line":177,"column":9,"nodeType":"135","endLine":177,"endColumn":89},{"ruleId":"160","severity":1,"message":"161","line":184,"column":9,"nodeType":"135","endLine":184,"endColumn":61},{"ruleId":"160","severity":1,"message":"161","line":185,"column":9,"nodeType":"135","endLine":185,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":186,"column":9,"nodeType":"135","endLine":186,"endColumn":78},{"ruleId":"160","severity":1,"message":"161","line":187,"column":9,"nodeType":"135","endLine":187,"endColumn":89},{"ruleId":"162","severity":1,"message":"163","line":3,"column":1,"nodeType":"164","endLine":30,"endColumn":3},{"ruleId":"123","severity":1,"message":"165","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"166","line":5,"column":5,"nodeType":"125","messageId":"126","endLine":5,"endColumn":10},{"ruleId":"123","severity":1,"message":"167","line":4,"column":3,"nodeType":"125","messageId":"126","endLine":4,"endColumn":10},{"ruleId":"123","severity":1,"message":"168","line":6,"column":3,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"169","line":7,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":13},{"ruleId":"123","severity":1,"message":"170","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":11},{"ruleId":"123","severity":1,"message":"171","line":9,"column":3,"nodeType":"125","messageId":"126","endLine":9,"endColumn":11},{"ruleId":"123","severity":1,"message":"172","line":10,"column":3,"nodeType":"125","messageId":"126","endLine":10,"endColumn":7},{"ruleId":"123","severity":1,"message":"173","line":11,"column":3,"nodeType":"125","messageId":"126","endLine":11,"endColumn":23},{"ruleId":"123","severity":1,"message":"174","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":12},{"ruleId":"123","severity":1,"message":"175","line":13,"column":3,"nodeType":"125","messageId":"126","endLine":13,"endColumn":16},{"ruleId":"123","severity":1,"message":"176","line":19,"column":7,"nodeType":"125","messageId":"126","endLine":19,"endColumn":14},{"ruleId":"123","severity":1,"message":"177","line":23,"column":7,"nodeType":"125","messageId":"126","endLine":23,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":51,"column":29,"nodeType":"135","endLine":51,"endColumn":80},{"ruleId":"160","severity":1,"message":"161","line":58,"column":29,"nodeType":"135","endLine":58,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":65,"column":29,"nodeType":"135","endLine":65,"endColumn":98},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"'ReactFlow' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'render' is defined but never used.","'Redirect' is defined but never used.","'mount' is defined but never used.","'DnDFlow' is defined but never used.","no-eval","eval can be harmful.","CallExpression","'fileID' is assigned a value but never used.","'owner' is assigned a value but never used.","'json' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'bgColor' is assigned a value but never used.","'setBgColor' is assigned a value but never used.","'position' is assigned a value but never used.","Expected '===' and instead saw '=='.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'createRef' is defined but never used.","'letId' is assigned a value but never used.","'addEdge' is defined but never used.","'OnLoadParams' is defined but never used.","'Connection' is defined but never used.","'Position' is defined but never used.","'Elements' is defined but never used.","'Edge' is defined but never used.","'OnConnectStartParams' is defined but never used.","'NodeProps' is defined but never used.","'NodeTypesType' is defined but never used.","'isValid' is assigned a value but never used.","'isValidConnection' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
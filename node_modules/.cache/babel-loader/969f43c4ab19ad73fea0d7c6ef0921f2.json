{"ast":null,"code":"var _jsxFileName = \"C:\\\\Distributed_Nodeworks\\\\src\\\\Pages\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from 'react-flow-renderer';\nimport Sidebar from './Sidebar.js';\nimport axios from 'axios';\nimport './dnd.css';\nimport localforage from 'localforage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlocalforage.config({\n  name: 'react-flow-docs',\n  storeName: 'flows'\n});\nconst flowKey = 'example-flow';\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nlet id = 0;\n\nconst getId = () => `dndnode_${id++}`;\n\nconst DnDFlow = () => {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n\n  const onDrop = useCallback(event => {\n    // event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    var position = null; // try{\n    //   var position = reactFlowInstance.project({\n    //     x: event.clientX - reactFlowBounds.left,\n    //     y: event.clientY - reactFlowBounds.top,\n    //   });\n    //   console.log(position)\n    // }\n    // catch{\n    //   console.log(\"ERROR\")\n    //   window.location.reload()\n    // }\n\n    const newNode = {\n      id: getId(),\n      type,\n      position: {\n        x: event.clientX,\n        y: event.clientY - reactFlowBounds.top\n      },\n      data: {\n        label: `${type} node`\n      }\n    };\n    setElements(es => es.concat(newNode));\n    console.log(newNode.id);\n  }, [setElements]);\n  const onSave = useCallback(() => {\n    if (reactFlowInstance) {\n      const flow = reactFlowInstance.toObject();\n      localforage.setItem(flowKey, flow);\n    }\n  }, [reactFlowInstance]);\n\n  const sendWorkflow = () => {\n    // console.log(elements)\n    let ele = JSON.stringify(elements);\n    console.log(ele);\n    const data = {\n      user: localStorage.getData('username'),\n      node: ele\n    };\n    axios.put('http://localhost:5000/api/v1/workflow/publish/' + localStorage.getItem('token'), data).then(res => {\n      console.log(\"HELLO\" + res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onRestore = useCallback(() => {\n    const restoreFlow = async () => {\n      const flow = await localforage.getItem(flowKey);\n\n      if (flow) {\n        const [x = 0, y = 0] = flow.position;\n        setElements(flow.elements || []);\n      }\n    };\n\n    restoreFlow();\n  }, [setElements]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          onConnect: onConnect,\n          onElementsRemove: onElementsRemove,\n          onLoad: onLoad,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onRestore,\n          children: \"Restore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          method: true,\n          onClick: sendWorkflow,\n          children: \"SEE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DnDFlow, \"NB5tw45qbk7is2L+gPdwoDF/xfE=\");\n\n_c = DnDFlow;\nexport default DnDFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"sources":["C:/Distributed_Nodeworks/src/Pages/home.js"],"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","removeElements","Controls","Sidebar","axios","localforage","config","name","storeName","flowKey","initialElements","id","type","data","label","position","x","y","getId","DnDFlow","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","elements","setElements","onConnect","params","els","onElementsRemove","elementsToRemove","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","newNode","clientX","clientY","top","es","concat","console","log","onSave","flow","toObject","setItem","sendWorkflow","ele","JSON","stringify","user","localStorage","node","put","getItem","then","res","catch","err","onRestore","restoreFlow"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls,\r\n} from 'react-flow-renderer';\r\n\r\nimport Sidebar from './Sidebar.js';\r\nimport axios from 'axios';\r\nimport './dnd.css';\r\nimport localforage from 'localforage';\r\nlocalforage.config({\r\n  name: 'react-flow-docs',\r\n  storeName: 'flows',\r\n});\r\n\r\nconst flowKey = 'example-flow';\r\n\r\nconst initialElements = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'input node' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n];\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  };\r\n\r\n  const onDrop = useCallback((event) => {\r\n    // event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n    var position = null;\r\n    // try{\r\n    //   var position = reactFlowInstance.project({\r\n    //     x: event.clientX - reactFlowBounds.left,\r\n    //     y: event.clientY - reactFlowBounds.top,\r\n    //   });\r\n    //   console.log(position)\r\n    // }\r\n    // catch{\r\n    //   console.log(\"ERROR\")\r\n    //   window.location.reload()\r\n    // }\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position: {\r\n        x: event.clientX,\r\n        y: event.clientY-reactFlowBounds.top\r\n      },\r\n      data: { label: `${type} node` },\r\n    };\r\n\r\n    setElements((es) => es.concat(newNode));\r\n    console.log(newNode.id);\r\n  },[setElements]);\r\n  \r\n  const onSave = useCallback(() => {\r\n    \r\n    if (reactFlowInstance) {\r\n      const flow = reactFlowInstance.toObject();\r\n      localforage.setItem(flowKey, flow);\r\n    }\r\n  }, [reactFlowInstance]);\r\n  const sendWorkflow = () =>{\r\n    // console.log(elements)\r\n    let ele = JSON.stringify(elements)\r\n    console.log(ele)\r\n    const data={\r\n      user: localStorage.getData('username'),\r\n      node: ele\r\n    }\r\n    axios.put('http://localhost:5000/api/v1/workflow/publish/'+localStorage.getItem('token'),data).then(\r\n      res=>{\r\n        console.log(\"HELLO\" + res)\r\n    }\r\n    ).catch(\r\n      err =>{\r\n          console.log(err);\r\n      }\r\n    )\r\n  }\r\n  const onRestore = useCallback(() => {\r\n    const restoreFlow = async () => {\r\n      const flow = await localforage.getItem(flowKey);\r\n\r\n      if (flow) {\r\n        const [x = 0, y = 0] = flow.position;\r\n        setElements(flow.elements || []);\r\n      }\r\n    };\r\n\r\n    restoreFlow();\r\n  }, [setElements]);\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n          >\r\n            <Controls />\r\n          </ReactFlow>\r\n          <button onClick={onSave}>Save</button>\r\n          <button onClick={onRestore}>Restore</button>\r\n          <button method onClick={sendWorkflow}>SEE</button>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;"]},"metadata":{},"sourceType":"module"}